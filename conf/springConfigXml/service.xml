<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns= "http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation = "http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 一定要添加xmlns:context -->

    <!-- 设置目录org.wy.ioc，Spring会去该目录下扫描所有类的注解 -->
    <context:component-scan base-package="org.wy.ioc"></context:component-scan>
<!--    Spring IOC常用四大类注解：-->

<!--    1.用于创建对象的-->
<!--        ①@Component-->
<!--            作用：把当前类对象存入Spring IOC容器中-->
<!--            属性：-->
<!--                value：指定bean的id。如果不写，默认使用当前类名，且首字母改小写。-->
<!--        ②@Controller：一般用在表现层-->
<!--        ③@Service：一般用在业务层-->
<!--        ④@Repository：一般用在持久层-->
<!--    ②③④注解和①的作用和属性一模一样，它们存在的意义就是"Spring框架为我们提供明确的三层使用的注解，使我们的三层对象更加清晰"。-->

<!--    2.用于给对象注入数据的-->
<!--        ①@Autowired-->
<!--            作用：给当前类对象自动按照类型注入。只要容器中有唯一的一个bean对象类型和该对象匹配，则可以注入成功。-->
<!--            使用位置：变量、方法上-->
<!--            注意：使用注解注入数据的话，set方法就不是必须的了。-->
<!--        ②@Qualifier-->
<!--            作用：-->
<!--                通常和@Autowired一起使用，当出现多个bean的类型相同是，该注释可以直接指定bean的名字来选择注入哪个bean。-->
<!--                当该注释给类成员注入时，必须和@Autowired一起使用。-->
<!--                但是在给方法参数注入时，可以单独使用。-->
<!--            属性：-->
<!--                value：指定bean的id。-->
<!--        ③@Resource-->
<!--            作用：直接按照bean的id注入。它可以独立使用。-->
<!--            属性：-->
<!--                name：指定bean的id。-->
<!--        ④@value-->
<!--            作用：用于给基本类型和String类型注入数据-->
<!--            属性：-->
<!--                value：指定数据的值。-->

<!--    3.用于给对象设置作用范围的-->
<!--        ①@Scope-->
<!--            作用：指定bean的作用范围-->
<!--            属性-->
<!--                value：指定范围的取值。常用取值：(默认)singleton、prototype-->

<!--    4.用于给对象设置生命周期的（了解即可）-->
<!--        ①@PreDestroy-->
<!--            作用：指定销毁方法-->
<!--        ②@PostConstruct-->
<!--            作用：指定初始化方法-->

<!-- 我是分割线 -->

<!--    &lt;!&ndash; 从这里开始设置bean &ndash;&gt;-->

<!--    &lt;!&ndash; 设置完TransactionService，main函数里就不需要在new TransactionServiceImpl()&ndash;&gt;-->
<!--    <bean id="TransactionService" class="org.wy.ioc.service.TransactionServiceImpl">-->
<!--        &lt;!&ndash; 这里直接使用下面设置的bean作为成员 &ndash;&gt;-->
<!--        <property name="Consumer" ref="Consumer"></property>-->
<!--        <property name="Producer" ref="Producer"></property>-->
<!--    </bean>-->

<!--    &lt;!&ndash; 设置完Consumer，TransactionServiceImpl里就不需要在new Consumer()&ndash;&gt;-->
<!--    <bean id="Consumer" class="org.wy.ioc.pojo.Consumer">-->
<!--        <property name="name" value="王也"></property>-->
<!--        <property name="age" value="24"></property>-->
<!--        <property name="balance" value="3"></property>-->
<!--    </bean>-->

<!--    &lt;!&ndash; 设置完Producer，TransactionServiceImpl里就不需要在new Producer()&ndash;&gt;-->
<!--    <bean id="Producer" class="org.wy.ioc.pojo.Producer">-->
<!--        <property name="name" value="老板"></property>-->
<!--        <property name="age" value="30"></property>-->
<!--    </bean>-->

</beans>
